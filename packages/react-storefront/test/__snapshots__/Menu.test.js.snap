// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should be able to render leaf as a top level item 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-716 MuiDrawer-modal-727 RSFMenu-modal-715" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-716 MuiDrawer-modal-727 RSFMenu-modal-715" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-728 MuiDrawer-root-716 MuiDrawer-modal-727 RSFMenu-modal-715 MuiModal-hidden-729">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-730" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-718 RSFMenu-drawer-700 MuiDrawer-paperAnchorLeft-719" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-718 RSFMenu-drawer-700 MuiDrawer-paperAnchorLeft-719" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-732 MuiPaper-elevation16-750 MuiDrawer-paper-718 RSFMenu-drawer-700 MuiDrawer-paperAnchorLeft-719" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-759 MuiList-padding-760 RSFMenu-list-701" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-768">
                                                                <ButtonBase className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-768" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-778 MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-781">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-710">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-710" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-787 RSFMenu-listItemIcon-710">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-704">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-704">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-704">
                                                                                <SvgIcon className="RSFMenu-icon-704" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-788 RSFMenu-icon-704" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-802" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-802" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-797" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-799">
                                                              <div className="MuiCollapse-wrapperInner-800">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-759 RSFMenu-list-701 MuiList-padding-760" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-768">
                                                                                    <ButtonBase className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-768" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-778 MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-expander-711 MuiMenuItem-gutters-764" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-781">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-710">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-710" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-787 RSFMenu-listItemIcon-710">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-704">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-704">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-704">
                                                                                                    <SvgIcon className="RSFMenu-icon-704" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-788 RSFMenu-icon-704" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-802" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-802" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-797" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-799">
                                                                                  <div className="MuiCollapse-wrapperInner-800">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-759 RSFMenu-list-701 MuiList-padding-760" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-801 RSFMenu-link-708" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-768">
                                                                                                                <ButtonBase className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-768" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-778 MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-781">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-802" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-802" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-708" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-801 RSFMenu-link-708" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-768">
                                                                        <ButtonBase className="MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-768" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-778 MuiListItem-root-766 MuiListItem-default-769 MuiListItem-gutters-774 MuiListItem-divider-773 MuiListItem-button-775 MuiMenuItem-root-763 RSFMenu-listItem-707 RSFMenu-leaf-712 MuiMenuItem-gutters-764" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                <div className="MuiListItemText-root-781">
                                                                                  Leaf
                                                                                </div>
                                                                              </ListItemText>
                                                                            </WithStyles(ListItemText)>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-802" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-802" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: mockConstructor]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: mockConstructor]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-825 MuiDrawer-modal-836 RSFMenu-modal-824" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-825 MuiDrawer-modal-836 RSFMenu-modal-824" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-837 MuiDrawer-root-825 MuiDrawer-modal-836 RSFMenu-modal-824 MuiModal-hidden-838">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-839" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-827 RSFMenu-drawer-809 MuiDrawer-paperAnchorLeft-828" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-827 RSFMenu-drawer-809 MuiDrawer-paperAnchorLeft-828" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-841 MuiPaper-elevation16-859 MuiDrawer-paper-827 RSFMenu-drawer-809 MuiDrawer-paperAnchorLeft-828" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-868 MuiList-padding-869 RSFMenu-list-810" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-877">
                                                                <ButtonBase className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-877" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-887 MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-890">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-819">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-819" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-896 RSFMenu-listItemIcon-819">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-813">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-813">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-813">
                                                                                <SvgIcon className="RSFMenu-icon-813" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-897 RSFMenu-icon-813" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-911" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-911" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-906" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-908">
                                                              <div className="MuiCollapse-wrapperInner-909">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-868 RSFMenu-list-810 MuiList-padding-869" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-877">
                                                                                    <ButtonBase className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-877" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-887 MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-expander-820 MuiMenuItem-gutters-873" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-890">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-819">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-819" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-896 RSFMenu-listItemIcon-819">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-813">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-813">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-813">
                                                                                                    <SvgIcon className="RSFMenu-icon-813" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-897 RSFMenu-icon-813" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-911" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-911" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-906" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-908">
                                                                                  <div className="MuiCollapse-wrapperInner-909">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-868 RSFMenu-list-810 MuiList-padding-869" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-910 RSFMenu-link-817" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-877">
                                                                                                                <ButtonBase className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-877" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-887 MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-890">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-911" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-911" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-817" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-910 RSFMenu-link-817" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-877">
                                                                        <ButtonBase className="MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-877" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-887 MuiListItem-root-875 MuiListItem-default-878 MuiListItem-gutters-883 MuiListItem-divider-882 MuiListItem-button-884 MuiMenuItem-root-872 RSFMenu-listItem-816 RSFMenu-leaf-821 MuiMenuItem-gutters-873" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                            <WithStyles(ListItemText) primary="Leaf" disableTypography={true}>
                                                                              <ListItemText primary="Leaf" disableTypography={true} classes={{...}} inset={false}>
                                                                                <div className="MuiListItemText-root-890">
                                                                                  Leaf
                                                                                </div>
                                                                              </ListItemText>
                                                                            </WithStyles(ListItemText)>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-911" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-911" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should call a custom itemRenderer 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true} itemRenderer={[Function: renderer]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true} itemRenderer={[Function: renderer]}>
          <inject-Menu-with-app theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}}>
            <Menu theme={{...}} simple={true} itemRenderer={[Function: renderer]} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-934 MuiDrawer-modal-945 RSFMenu-modal-933" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-934 MuiDrawer-modal-945 RSFMenu-modal-933" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-946 MuiDrawer-root-934 MuiDrawer-modal-945 RSFMenu-modal-933 MuiModal-hidden-947">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-948" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-936 RSFMenu-drawer-918 MuiDrawer-paperAnchorLeft-937" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-936 RSFMenu-drawer-918 MuiDrawer-paperAnchorLeft-937" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-950 MuiPaper-elevation16-968 MuiDrawer-paper-936 RSFMenu-drawer-918 MuiDrawer-paperAnchorLeft-937" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-977 MuiList-padding-978 RSFMenu-list-919" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                <ButtonBase className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-996 MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <div>
                                                                      Group 1
                                                                    </div>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1004" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-1004" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-999" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-1001">
                                                              <div className="MuiCollapse-wrapperInner-1002">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-977 RSFMenu-list-919 MuiList-padding-978" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                                    <ButtonBase className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-996 MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-expander-929 MuiMenuItem-gutters-982" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <div>
                                                                                          Item 1
                                                                                        </div>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1004" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-1004" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-999" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-1001">
                                                                                  <div className="MuiCollapse-wrapperInner-1002">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-977 RSFMenu-list-919 MuiList-padding-978" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-1003 RSFMenu-link-926" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                                                                <ButtonBase className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-996 MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <div>
                                                                                                                      Child 1
                                                                                                                    </div>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1004" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-1004" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                    <WithStyles(inject-Link) to="/leaf" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <inject-Link to="/leaf" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}}>
                                                        <Link to="/leaf" className="RSFMenu-link-926" server={false} state={{...}} tabIndex={-1} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                          <a data-moov-link="on" className="RSFLink-root-1003 RSFMenu-link-926" style={[undefined]} onClick={[Function]} href="https://localhost/leaf">
                                                            <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                              <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" divider={true}>
                                                                  <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                    <MergeListContext dense={false} alignItems="center">
                                                                      <WithStyles(ButtonBase) className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-986">
                                                                        <ButtonBase className="MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-986" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                          <li className="MuiButtonBase-root-996 MuiListItem-root-984 MuiListItem-default-987 MuiListItem-gutters-992 MuiListItem-divider-991 MuiListItem-button-993 MuiMenuItem-root-981 RSFMenu-listItem-925 RSFMenu-leaf-930 MuiMenuItem-gutters-982" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                            <div>
                                                                              Leaf
                                                                            </div>
                                                                            <NoSsr defer={false} fallback={{...}}>
                                                                              <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                <TouchRipple center={false} classes={{...}}>
                                                                                  <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-1004" childFactory={[Function: childFactory]}>
                                                                                    <span className="MuiTouchRipple-root-1004" />
                                                                                  </TransitionGroup>
                                                                                </TouchRipple>
                                                                              </WithStyles(TouchRipple)>
                                                                            </NoSsr>
                                                                          </li>
                                                                        </ButtonBase>
                                                                      </WithStyles(ButtonBase)>
                                                                    </MergeListContext>
                                                                  </ListItem>
                                                                </WithStyles(ListItem)>
                                                              </MenuItem>
                                                            </WithStyles(MenuItem)>
                                                          </a>
                                                        </Link>
                                                      </inject-Link>
                                                    </WithStyles(inject-Link)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app))>
        <WithStyles(inject-Menu-with-app) theme={{...}}>
          <inject-Menu-with-app theme={{...}} classes={{...}}>
            <Menu theme={{...}} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-138 MuiDrawer-root-126 MuiDrawer-modal-137 RSFMenu-modal-125 MuiModal-hidden-139">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-140" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-142 MuiPaper-elevation16-160 MuiDrawer-paper-128 RSFMenu-drawer-110 MuiDrawer-paperAnchorLeft-129" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-116" style={{...}}>
                                              <MenuList className="rsf-menu-body-lock" style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-169 RSFMenu-list-111 MuiList-padding-170 rsf-menu-body-lock" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-173 RSFMenu-listItem-117 MuiMenuItem-gutters-174" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-173 RSFMenu-listItem-117 MuiMenuItem-gutters-174" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-176 MuiListItem-default-179 MuiListItem-gutters-184 MuiListItem-divider-183 MuiListItem-button-185 MuiMenuItem-root-173 RSFMenu-listItem-117 MuiMenuItem-gutters-174" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-178">
                                                                  <ButtonBase className="MuiListItem-root-176 MuiListItem-default-179 MuiListItem-gutters-184 MuiListItem-divider-183 MuiListItem-button-185 MuiMenuItem-root-173 RSFMenu-listItem-117 MuiMenuItem-gutters-174" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-178" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-188 MuiListItem-root-176 MuiListItem-default-179 MuiListItem-gutters-184 MuiListItem-divider-183 MuiListItem-button-185 MuiMenuItem-root-173 RSFMenu-listItem-117 MuiMenuItem-gutters-174" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-191">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-120">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-120" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-197 RSFMenu-listItemIcon-120">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-114">
                                                                              <ChevronRightIcon className="RSFMenu-icon-114">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-114">
                                                                                  <SvgIcon className="RSFMenu-icon-114" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-198 RSFMenu-icon-114" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-207" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-207" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in complex mode by default 2`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-230 MuiDrawer-modal-241 RSFMenu-modal-229" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-230 MuiDrawer-modal-241 RSFMenu-modal-229" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-242 MuiDrawer-root-230 MuiDrawer-modal-241 RSFMenu-modal-229 MuiModal-hidden-243">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-244" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-232 RSFMenu-drawer-214 MuiDrawer-paperAnchorLeft-233" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-232 RSFMenu-drawer-214 MuiDrawer-paperAnchorLeft-233" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-246 MuiPaper-elevation16-264 MuiDrawer-paper-232 RSFMenu-drawer-214 MuiDrawer-paperAnchorLeft-233" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-220" style={{...}}>
                                              <MenuList className="rsf-menu-body-lock" style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-273 RSFMenu-list-215 MuiList-padding-274 rsf-menu-body-lock" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-277 RSFMenu-listItem-221 MuiMenuItem-gutters-278" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-277 RSFMenu-listItem-221 MuiMenuItem-gutters-278" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-280 MuiListItem-default-283 MuiListItem-gutters-288 MuiListItem-divider-287 MuiListItem-button-289 MuiMenuItem-root-277 RSFMenu-listItem-221 MuiMenuItem-gutters-278" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-282">
                                                                  <ButtonBase className="MuiListItem-root-280 MuiListItem-default-283 MuiListItem-gutters-288 MuiListItem-divider-287 MuiListItem-button-289 MuiMenuItem-root-277 RSFMenu-listItem-221 MuiMenuItem-gutters-278" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-282" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-292 MuiListItem-root-280 MuiListItem-default-283 MuiListItem-gutters-288 MuiListItem-divider-287 MuiListItem-button-289 MuiMenuItem-root-277 RSFMenu-listItem-221 MuiMenuItem-gutters-278" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-295">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-224">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-224" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-301 RSFMenu-listItemIcon-224">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-218">
                                                                              <ChevronRightIcon className="RSFMenu-icon-218">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-218">
                                                                                  <SvgIcon className="RSFMenu-icon-218" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-302 RSFMenu-icon-218" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-311" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-311" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render in simple mode 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) simple={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} simple={true}>
          <inject-Menu-with-app theme={{...}} simple={true} classes={{...}}>
            <Menu theme={{...}} simple={true} classes={{...}} app={{...}} drawerWidth={330} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-29 MuiDrawer-root-17 MuiDrawer-modal-28 RSFMenu-modal-16 MuiModal-hidden-30">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-31" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-33 MuiPaper-elevation16-51 MuiDrawer-paper-19 RSFMenu-drawer-1 MuiDrawer-paperAnchorLeft-20" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <MenuList classes={{...}}>
                                              <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}}>
                                                <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                  <ul className="MuiList-root-60 MuiList-padding-61 RSFMenu-list-2" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                    <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                      <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                            <MergeListContext dense={false} alignItems="center">
                                                              <WithStyles(ButtonBase) className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-69">
                                                                <ButtonBase className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-69" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                  <li className="MuiButtonBase-root-79 MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                    <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                      <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                        <div className="MuiListItemText-root-82">
                                                                          Group 1
                                                                        </div>
                                                                      </ListItemText>
                                                                    </WithStyles(ListItemText)>
                                                                    <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                      <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                        <div className="MuiListItemIcon-root-88 RSFMenu-listItemIcon-11">
                                                                          <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                            <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                              <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                  <svg className="MuiSvgIcon-root-89 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                    <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                    <path fill="none" d="M0 0h24v24H0z" />
                                                                                  </svg>
                                                                                </SvgIcon>
                                                                              </WithStyles(SvgIcon)>
                                                                            </ExpandMoreIcon>
                                                                          </pure(ExpandMoreIcon)>
                                                                        </div>
                                                                      </ListItemIcon>
                                                                    </WithStyles(ListItemIcon)>
                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                        <TouchRipple center={false} classes={{...}}>
                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                            <span className="MuiTouchRipple-root-103" />
                                                                          </TransitionGroup>
                                                                        </TouchRipple>
                                                                      </WithStyles(TouchRipple)>
                                                                    </NoSsr>
                                                                  </li>
                                                                </ButtonBase>
                                                              </WithStyles(ButtonBase)>
                                                            </MergeListContext>
                                                          </ListItem>
                                                        </WithStyles(ListItem)>
                                                      </MenuItem>
                                                    </WithStyles(MenuItem)>
                                                    <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                      <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                        <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                          <div className="MuiCollapse-container-98" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                            <div className="MuiCollapse-wrapper-100">
                                                              <div className="MuiCollapse-wrapperInner-101">
                                                                <MenuList component="div" classes={{...}}>
                                                                  <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                    <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                      <div className="MuiList-root-60 RSFMenu-list-2 MuiList-padding-61" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                        <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={0} onFocus={[Function]}>
                                                                          <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={0} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                            <WithStyles(ListItem) button={true} role="menuitem" tabIndex={0} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                                              <ListItem button={true} role="menuitem" tabIndex={0} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                <MergeListContext dense={false} alignItems="center">
                                                                                  <WithStyles(ButtonBase) className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-69">
                                                                                    <ButtonBase className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={0} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-69" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                      <li className="MuiButtonBase-root-79 MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-expander-12 MuiMenuItem-gutters-65" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={0} role="menuitem" onClick={[Function: bound ]}>
                                                                                        <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                                          <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                            <div className="MuiListItemText-root-82">
                                                                                              Item 1
                                                                                            </div>
                                                                                          </ListItemText>
                                                                                        </WithStyles(ListItemText)>
                                                                                        <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-11">
                                                                                          <ListItemIcon className="RSFMenu-listItemIcon-11" classes={{...}}>
                                                                                            <div className="MuiListItemIcon-root-88 RSFMenu-listItemIcon-11">
                                                                                              <pure(ExpandMoreIcon) className="RSFMenu-icon-5">
                                                                                                <ExpandMoreIcon className="RSFMenu-icon-5">
                                                                                                  <WithStyles(SvgIcon) className="RSFMenu-icon-5">
                                                                                                    <SvgIcon className="RSFMenu-icon-5" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                                      <svg className="MuiSvgIcon-root-89 RSFMenu-icon-5" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                                        <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z" />
                                                                                                        <path fill="none" d="M0 0h24v24H0z" />
                                                                                                      </svg>
                                                                                                    </SvgIcon>
                                                                                                  </WithStyles(SvgIcon)>
                                                                                                </ExpandMoreIcon>
                                                                                              </pure(ExpandMoreIcon)>
                                                                                            </div>
                                                                                          </ListItemIcon>
                                                                                        </WithStyles(ListItemIcon)>
                                                                                        <NoSsr defer={false} fallback={{...}}>
                                                                                          <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                            <TouchRipple center={false} classes={{...}}>
                                                                                              <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                                                <span className="MuiTouchRipple-root-103" />
                                                                                              </TransitionGroup>
                                                                                            </TouchRipple>
                                                                                          </WithStyles(TouchRipple)>
                                                                                        </NoSsr>
                                                                                      </li>
                                                                                    </ButtonBase>
                                                                                  </WithStyles(ButtonBase)>
                                                                                </MergeListContext>
                                                                              </ListItem>
                                                                            </WithStyles(ListItem)>
                                                                          </MenuItem>
                                                                        </WithStyles(MenuItem)>
                                                                        <WithStyles(Collapse) in={false} timeout="auto" tabIndex={-1} onFocus={[Function]}>
                                                                          <Collapse in={false} timeout="auto" tabIndex={-1} onFocus={[Function]} theme={{...}} classes={{...}} collapsedHeight="0px" component="div">
                                                                            <Transition onEnter={[Function]} onEntered={[Function]} onEntering={[Function]} onExit={[Function]} onExiting={[Function]} addEndListener={[Function]} timeout={{...}} in={false} tabIndex={-1} onFocus={[Function]} mountOnEnter={false} unmountOnExit={false} appear={false} enter={true} exit={true} onExited={[Function: noop]}>
                                                                              <div className="MuiCollapse-container-98" style={{...}} tabIndex={-1} onFocus={[Function]}>
                                                                                <div className="MuiCollapse-wrapper-100">
                                                                                  <div className="MuiCollapse-wrapperInner-101">
                                                                                    <MenuList component="div" classes={{...}}>
                                                                                      <WithStyles(List) role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}}>
                                                                                        <List role="menu" className={[undefined]} onKeyDown={[Function]} onBlur={[Function]} component="div" classes={{...}} dense={false} disablePadding={false}>
                                                                                          <div className="MuiList-root-60 RSFMenu-list-2 MuiList-padding-61" role="menu" onKeyDown={[Function]} onBlur={[Function]}>
                                                                                            <WithStyles(inject-Link) to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]}>
                                                                                              <inject-Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}}>
                                                                                                <Link to="/item1/child1" className="RSFMenu-link-9" server={false} state={{...}} tabIndex={0} onFocus={[Function]} classes={{...}} history={{...}} router={{...}} location={{...}} anchorProps={{...}}>
                                                                                                  <a data-moov-link="on" className="RSFLink-root-102 RSFMenu-link-9" style={[undefined]} onClick={[Function]} href="https://localhost/item1/child1">
                                                                                                    <WithStyles(MenuItem) button={true} divider={true} selected={false} classes={{...}}>
                                                                                                      <MenuItem button={true} divider={true} selected={false} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                                                                        <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-65" divider={true}>
                                                                                                          <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-65" divider={true} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                                                                            <MergeListContext dense={false} alignItems="center">
                                                                                                              <WithStyles(ButtonBase) className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-69">
                                                                                                                <ButtonBase className="MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-65" disabled={false} role="menuitem" tabIndex={-1} component="li" focusVisibleClassName="MuiListItem-focusVisible-69" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                                                                  <li className="MuiButtonBase-root-79 MuiListItem-root-67 MuiListItem-default-70 MuiListItem-gutters-75 MuiListItem-divider-74 MuiListItem-button-76 MuiMenuItem-root-64 RSFMenu-listItem-8 RSFMenu-leaf-13 MuiMenuItem-gutters-65" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem">
                                                                                                                    <WithStyles(ListItemText) primary="Child 1" disableTypography={true}>
                                                                                                                      <ListItemText primary="Child 1" disableTypography={true} classes={{...}} inset={false}>
                                                                                                                        <div className="MuiListItemText-root-82">
                                                                                                                          Child 1
                                                                                                                        </div>
                                                                                                                      </ListItemText>
                                                                                                                    </WithStyles(ListItemText)>
                                                                                                                    <NoSsr defer={false} fallback={{...}}>
                                                                                                                      <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                                                                        <TouchRipple center={false} classes={{...}}>
                                                                                                                          <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-103" childFactory={[Function: childFactory]}>
                                                                                                                            <span className="MuiTouchRipple-root-103" />
                                                                                                                          </TransitionGroup>
                                                                                                                        </TouchRipple>
                                                                                                                      </WithStyles(TouchRipple)>
                                                                                                                    </NoSsr>
                                                                                                                  </li>
                                                                                                                </ButtonBase>
                                                                                                              </WithStyles(ButtonBase)>
                                                                                                            </MergeListContext>
                                                                                                          </ListItem>
                                                                                                        </WithStyles(ListItem)>
                                                                                                      </MenuItem>
                                                                                                    </WithStyles(MenuItem)>
                                                                                                  </a>
                                                                                                </Link>
                                                                                              </inject-Link>
                                                                                            </WithStyles(inject-Link)>
                                                                                          </div>
                                                                                        </List>
                                                                                      </WithStyles(List)>
                                                                                    </MenuList>
                                                                                  </div>
                                                                                </div>
                                                                              </div>
                                                                            </Transition>
                                                                          </Collapse>
                                                                        </WithStyles(Collapse)>
                                                                      </div>
                                                                    </List>
                                                                  </WithStyles(List)>
                                                                </MenuList>
                                                              </div>
                                                            </div>
                                                          </div>
                                                        </Transition>
                                                      </Collapse>
                                                    </WithStyles(Collapse)>
                                                  </ul>
                                                </List>
                                              </WithStyles(List)>
                                            </MenuList>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should render without expand first not root item by default 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-577 MuiDrawer-modal-588 RSFMenu-modal-576" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-577 MuiDrawer-modal-588 RSFMenu-modal-576" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-589 MuiDrawer-root-577 MuiDrawer-modal-588 RSFMenu-modal-576 MuiModal-hidden-590">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-591" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={true} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={true} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-579 RSFMenu-drawer-561 MuiDrawer-paperAnchorLeft-580" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-579 RSFMenu-drawer-561 MuiDrawer-paperAnchorLeft-580" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-593 MuiPaper-elevation16-611 MuiDrawer-paper-579 RSFMenu-drawer-561 MuiDrawer-paperAnchorLeft-580" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-567" style={{...}}>
                                              <MenuList className="" style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className="" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className="" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-620 RSFMenu-list-562 MuiList-padding-621" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629">
                                                                  <ButtonBase className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-639 MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-642">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-571">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-571" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-648 RSFMenu-listItemIcon-571">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-565">
                                                                              <ChevronRightIcon className="RSFMenu-icon-565">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-565">
                                                                                  <SvgIcon className="RSFMenu-icon-565" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-649 RSFMenu-icon-565" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-658" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-658" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                              <MenuList className="rsf-menu-body-lock" style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-620 RSFMenu-list-562 MuiList-padding-621 rsf-menu-body-lock" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem divider={true} button={true} onClick={[Function]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-624 MuiMenuItem-gutters-625" divider={true} onClick={[Function]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-624 MuiMenuItem-gutters-625" divider={true} onClick={[Function]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629">
                                                                  <ButtonBase className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-639 MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 MuiMenuItem-gutters-625" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function]}>
                                                                      <WithStyles(ListItemIcon) classes={{...}}>
                                                                        <ListItemIcon classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-648 RSFMenu-header-564">
                                                                            <pure(ChevronLeftIcon) className="RSFMenu-icon-565">
                                                                              <ChevronLeftIcon className="RSFMenu-icon-565">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-565">
                                                                                  <SvgIcon className="RSFMenu-icon-565" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-649 RSFMenu-icon-565" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronLeftIcon>
                                                                            </pure(ChevronLeftIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <WithStyles(ListItemText) classes={{...}} primary={{...}}>
                                                                        <ListItemText primary={{...}} classes={{...}} disableTypography={false} inset={false}>
                                                                          <div className="MuiListItemText-root-642 RSFMenu-headerText-566">
                                                                            <WithStyles(Typography) variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-645" component="span">
                                                                              <Typography variant="subheading" internalDeprecatedVariant={true} className="MuiListItemText-primary-645" component="span" theme={{...}} classes={{...}} align="inherit" color="default" gutterBottom={false} headlineMapping={{...}} noWrap={false} paragraph={false}>
                                                                                <span className="MuiTypography-root-665 MuiTypography-subtitle1-683 MuiListItemText-primary-645">
                                                                                  <div className="RSFMenu-headerText-566">
                                                                                    Group 1
                                                                                     
                                                                                  </div>
                                                                                </span>
                                                                              </Typography>
                                                                            </WithStyles(Typography)>
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-658" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-658" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629">
                                                                  <ButtonBase className="MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-629" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-639 MuiListItem-root-627 MuiListItem-default-630 MuiListItem-gutters-635 MuiListItem-divider-634 MuiListItem-button-636 MuiMenuItem-root-624 RSFMenu-listItem-568 MuiMenuItem-gutters-625" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Item 1" disableTypography={true}>
                                                                        <ListItemText primary="Item 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-642">
                                                                            Item 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-571">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-571" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-648 RSFMenu-listItemIcon-571">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-565">
                                                                              <ChevronRightIcon className="RSFMenu-icon-565">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-565">
                                                                                  <SvgIcon className="RSFMenu-icon-565" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-649 RSFMenu-icon-565" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-658" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-658" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;

exports[`Menu should use custom icons 1`] = `
<TestProvider app={{...}} history={{...}}>
  <Provider router={{...}} app={{...}} history={{...}}>
    <MuiThemeProviderOld theme={{...}}>
      <WithTheme(WithStyles(inject-Menu-with-app)) useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
        <WithStyles(inject-Menu-with-app) theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]}>
          <inject-Menu-with-app theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}}>
            <Menu theme={{...}} useexpanders={true} ExpandIcon={[Function: ShouldUpdate]} CollapseIcon={[Function: ShouldUpdate]} classes={{...}} app={{...}} drawerWidth={330} simple={false} expandFirstItem={false} align="left">
              <WithStyles(Drawer) variant="temporary" open={[undefined]} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} classes={{...}}>
                <Drawer variant="temporary" open={false} onClose={[Function: res]} anchor="left" ModalProps={{...}} PaperProps={{...}} theme={{...}} classes={{...}} elevation={16} transitionDuration={{...}}>
                  <WithStyles(Modal) BackdropProps={{...}} className="MuiDrawer-root-334 MuiDrawer-modal-345 RSFMenu-modal-333" open={false} onClose={[Function: res]} keepMounted={true}>
                    <Modal BackdropProps={{...}} className="MuiDrawer-root-334 MuiDrawer-modal-345 RSFMenu-modal-333" open={false} onClose={[Function: res]} keepMounted={true} classes={{...}} BackdropComponent={[Function: WithStyles]} disableAutoFocus={false} disableBackdropClick={false} disableEnforceFocus={false} disableEscapeKeyDown={false} disablePortal={false} disableRestoreFocus={false} hideBackdrop={false} manager={{...}}>
                      <Portal container={[undefined]} disablePortal={false} onRendered={[Function]}>
                        <Portal containerInfo={{...}}>
                          <div className="mui-fixed MuiModal-root-346 MuiDrawer-root-334 MuiDrawer-modal-345 RSFMenu-modal-333 MuiModal-hidden-347">
                            <WithStyles(Backdrop) open={false} onClick={[Function]} transitionDuration={{...}}>
                              <Backdrop open={false} onClick={[Function]} transitionDuration={{...}} classes={{...}} invisible={false}>
                                <WithTheme(Fade) in={false} timeout={{...}} onClick={[Function]}>
                                  <Fade theme={{...}} in={false} timeout={{...}} onClick={[Function]}>
                                    <Transition appear={true} onEnter={[Function]} onExit={[Function]} in={false} timeout={{...}} onClick={[Function]} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntering={[Function: noop]} onEntered={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                                      <div className="MuiBackdrop-root-348" aria-hidden="true" style={{...}} onClick={[Function]} />
                                    </Transition>
                                  </Fade>
                                </WithTheme(Fade)>
                              </Backdrop>
                            </WithStyles(Backdrop)>
                            <RootRef rootRef={[Function]}>
                              <WithTheme(Slide) in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                <Slide theme={{...}} in={false} direction="right" timeout={{...}} appear={false} onExited={[Function: chainedFunction]} role="document" tabIndex="-1">
                                  <EventListener target="window" onResize={[Function: debounced]}>
                                    <Transition onEnter={[Function]} onEntering={[Function]} onExit={[Function]} onExited={[Function]} appear={false} style={{...}} in={false} direction="right" timeout={{...}} role="document" tabIndex="-1" mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEntered={[Function: noop]} onExiting={[Function: noop]}>
                                      <WithStyles(Paper) elevation={16} square={true} className="MuiDrawer-paper-336 RSFMenu-drawer-318 MuiDrawer-paperAnchorLeft-337" style={{...}} direction="right" role="document" tabIndex="-1">
                                        <Paper elevation={16} square={true} className="MuiDrawer-paper-336 RSFMenu-drawer-318 MuiDrawer-paperAnchorLeft-337" style={{...}} direction="right" role="document" tabIndex="-1" classes={{...}} component="div">
                                          <div className="MuiPaper-root-350 MuiPaper-elevation16-368 MuiDrawer-paper-336 RSFMenu-drawer-318 MuiDrawer-paperAnchorLeft-337" style={{...}} direction="right" role="document" tabIndex="-1">
                                            <div className="RSFMenu-hbox-324" style={{...}}>
                                              <MenuList className="rsf-menu-body-lock" style={{...}} classes={{...}}>
                                                <WithStyles(List) role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}}>
                                                  <List role="menu" className="rsf-menu-body-lock" onKeyDown={[Function]} onBlur={[Function]} style={{...}} classes={{...}} component="ul" dense={false} disablePadding={false}>
                                                    <ul className="MuiList-root-377 RSFMenu-list-319 MuiList-padding-378 rsf-menu-body-lock" role="menu" onKeyDown={[Function]} onBlur={[Function]} style={{...}}>
                                                      <WithStyles(MenuItem) button={true} divider={true} onClick={[Function: bound ]} classes={{...}} tabIndex={-1} onFocus={[Function]}>
                                                        <MenuItem button={true} divider={true} onClick={[Function: bound ]} tabIndex={-1} onFocus={[Function]} classes={{...}} component="li" disableGutters={false} role="menuitem">
                                                          <WithStyles(ListItem) button={true} role="menuitem" tabIndex={-1} component="li" selected={[undefined]} disableGutters={false} className="MuiMenuItem-root-381 RSFMenu-listItem-325 MuiMenuItem-gutters-382" divider={true} onClick={[Function: bound ]} onFocus={[Function]}>
                                                            <ListItem button={true} role="menuitem" tabIndex={-1} component="li" selected={false} disableGutters={false} className="MuiMenuItem-root-381 RSFMenu-listItem-325 MuiMenuItem-gutters-382" divider={true} onClick={[Function: bound ]} onFocus={[Function]} classes={{...}} alignItems="center" ContainerComponent="li" dense={false} disabled={false}>
                                                              <MergeListContext dense={false} alignItems="center">
                                                                <WithStyles(ButtonBase) className="MuiListItem-root-384 MuiListItem-default-387 MuiListItem-gutters-392 MuiListItem-divider-391 MuiListItem-button-393 MuiMenuItem-root-381 RSFMenu-listItem-325 MuiMenuItem-gutters-382" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-386">
                                                                  <ButtonBase className="MuiListItem-root-384 MuiListItem-default-387 MuiListItem-gutters-392 MuiListItem-divider-391 MuiListItem-button-393 MuiMenuItem-root-381 RSFMenu-listItem-325 MuiMenuItem-gutters-382" disabled={false} role="menuitem" tabIndex={-1} onClick={[Function: bound ]} onFocus={[Function]} component="li" focusVisibleClassName="MuiListItem-focusVisible-386" classes={{...}} centerRipple={false} disableRipple={false} disableTouchRipple={false} focusRipple={false} type="button">
                                                                    <li className="MuiButtonBase-root-396 MuiListItem-root-384 MuiListItem-default-387 MuiListItem-gutters-392 MuiListItem-divider-391 MuiListItem-button-393 MuiMenuItem-root-381 RSFMenu-listItem-325 MuiMenuItem-gutters-382" onBlur={[Function]} onFocus={[Function]} onKeyDown={[Function]} onKeyUp={[Function]} onMouseDown={[Function]} onMouseLeave={[Function]} onMouseUp={[Function]} onTouchEnd={[Function]} onTouchMove={[Function]} onTouchStart={[Function]} tabIndex={-1} role="menuitem" onClick={[Function: bound ]}>
                                                                      <WithStyles(ListItemText) primary="Group 1" disableTypography={true}>
                                                                        <ListItemText primary="Group 1" disableTypography={true} classes={{...}} inset={false}>
                                                                          <div className="MuiListItemText-root-399">
                                                                            Group 1
                                                                          </div>
                                                                        </ListItemText>
                                                                      </WithStyles(ListItemText)>
                                                                      <WithStyles(ListItemIcon) className="RSFMenu-listItemIcon-328">
                                                                        <ListItemIcon className="RSFMenu-listItemIcon-328" classes={{...}}>
                                                                          <div className="MuiListItemIcon-root-405 RSFMenu-listItemIcon-328">
                                                                            <pure(ChevronRightIcon) className="RSFMenu-icon-322">
                                                                              <ChevronRightIcon className="RSFMenu-icon-322">
                                                                                <WithStyles(SvgIcon) className="RSFMenu-icon-322">
                                                                                  <SvgIcon className="RSFMenu-icon-322" classes={{...}} color="inherit" component="svg" fontSize="default" viewBox="0 0 24 24">
                                                                                    <svg className="MuiSvgIcon-root-406 RSFMenu-icon-322" focusable="false" viewBox="0 0 24 24" color={[undefined]} aria-hidden="true" role="presentation">
                                                                                      <path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z" />
                                                                                      <path fill="none" d="M0 0h24v24H0z" />
                                                                                    </svg>
                                                                                  </SvgIcon>
                                                                                </WithStyles(SvgIcon)>
                                                                              </ChevronRightIcon>
                                                                            </pure(ChevronRightIcon)>
                                                                          </div>
                                                                        </ListItemIcon>
                                                                      </WithStyles(ListItemIcon)>
                                                                      <NoSsr defer={false} fallback={{...}}>
                                                                        <WithStyles(TouchRipple) innerRef={[Function]} center={false}>
                                                                          <TouchRipple center={false} classes={{...}}>
                                                                            <TransitionGroup component="span" enter={true} exit={true} className="MuiTouchRipple-root-415" childFactory={[Function: childFactory]}>
                                                                              <span className="MuiTouchRipple-root-415" />
                                                                            </TransitionGroup>
                                                                          </TouchRipple>
                                                                        </WithStyles(TouchRipple)>
                                                                      </NoSsr>
                                                                    </li>
                                                                  </ButtonBase>
                                                                </WithStyles(ButtonBase)>
                                                              </MergeListContext>
                                                            </ListItem>
                                                          </WithStyles(ListItem)>
                                                        </MenuItem>
                                                      </WithStyles(MenuItem)>
                                                    </ul>
                                                  </List>
                                                </WithStyles(List)>
                                              </MenuList>
                                            </div>
                                            <noscript>
                                              <ul />
                                            </noscript>
                                          </div>
                                        </Paper>
                                      </WithStyles(Paper)>
                                    </Transition>
                                  </EventListener>
                                </Slide>
                              </WithTheme(Slide)>
                            </RootRef>
                          </div>
                        </Portal>
                      </Portal>
                    </Modal>
                  </WithStyles(Modal)>
                </Drawer>
              </WithStyles(Drawer)>
            </Menu>
          </inject-Menu-with-app>
        </WithStyles(inject-Menu-with-app)>
      </WithTheme(WithStyles(inject-Menu-with-app))>
    </MuiThemeProviderOld>
  </Provider>
</TestProvider>
`;
